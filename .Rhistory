for (col in 1:3) {
average_by_candidate_table[, col] <- as.numeric(as.character(average_by_candidate_table[, col]))
}
average_by_candidate_table[, 1:3] <- round(average_by_candidate_table[, 1:3], digits = 3)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_candidate_table) <- apt_row_names
kable_output <- kable(average_by_candidate_table,
caption = "Table 2. Descriptive Outcomes for Democrats by Trump Vote Share",
col.names = c("Overwhelming Majority Voted Trump", "Significant Trump Support", "Minority Trump Support"),
align = c("c", "c", "c"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Democrat Behavior According to Percentage of County Voted Trump" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("Counts" = 1, "Proportions" = 5))
print(kable_styled)
print(average_by_candidate)
rm(average_by_candidate)
kable_styled
library(dplyr)
library(ggplot2)
library(broom)
# Assuming 'wave' is a variable in your dataframe 'df'
# and you want to run the model for each wave
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(text = "Wave"))
library(dplyr)
library(ggplot2)
library(broom)
# Assuming 'wave' is a variable in your dataframe 'df'
# and you want to run the model for each wave
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) +
legend.title = element_text(text = "Wave"))
library(dplyr)
library(ggplot2)
library(broom)
# Assuming 'wave' is a variable in your dataframe 'df'
# and you want to run the model for each wave
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(text = "Wave"))
library(dplyr)
library(ggplot2)
library(broom)
# Assuming 'wave' is a variable in your dataframe 'df'
# and you want to run the model for each wave
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(text = "wave"))
library(dplyr)
library(ggplot2)
library(broom)
# Assuming 'wave' is a variable in your dataframe 'df'
# and you want to run the model for each wave
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text("wave"))
library(dplyr)
library(ggplot2)
library(broom)
# Assuming 'wave' is a variable in your dataframe 'df'
# and you want to run the model for each wave
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text("Wave"))  # Corrected here
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
legend.title = element_text("Wave"))  # Corrected here
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal()
library(dplyr)
library(ggplot2)
library(broom)
create_plot <- function(data_subset) {
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party,
data = data_subset, family = binomial)
results <- broom::tidy(model) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
ggplot(results, aes(x = term, y = odds_ratio, color = term)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = paste("Wave", unique(data_subset$wave), ": Odds Ratios of Reporting Reduction in Contact"),
subtitle = "Reference: Democrats") +
theme_minimal()
}
# Apply the function to each subset of data by wave and store plots in a list
plots <- df %>%
split(.$wave) %>%
map(~create_plot(.))
library(data.table)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(purrr)
library(broom)
library(cowplot)
library(dplyr)
library(ggplot2)
library(broom)
create_plot <- function(data_subset) {
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party,
data = data_subset, family = binomial)
results <- broom::tidy(model) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
ggplot(results, aes(x = term, y = odds_ratio, color = term)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = paste("Wave", unique(data_subset$wave), ": Odds Ratios of Reporting Reduction in Contact"),
subtitle = "Reference: Democrats") +
theme_minimal()
}
# Apply the function to each subset of data by wave and store plots in a list
plots <- df %>%
split(.$wave) %>%
map(~create_plot(.))
# Combine the separate plots into one
combined_plot <- cowplot::plot_grid(plotlist = plots, align = 'h')
# Print the combined plot
print(combined_plot)
combined_plot
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(text = "Wave"))
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text("Wave"))
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
legend.title = element_text("wave"))
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 10, hjust = 1),
legend.title = element_text("wave"))
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal()
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal()
ggplot(results, aes(x = term, y = odds_ratio, group = wave, color = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal()
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, shape = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_shape_manual(values = c(16, 17, 18)) +  # Choose your shapes here
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(legend.title = element_text(text = "Wave"),
axis.text.x = element_text(angle = 45, hjust = 1))
results <- df %>%
group_by(wave) %>%
do({
model <- glm(contact_reduction ~ COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = ., family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, shape = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_shape_manual(values = c(16, 17, 18)) +  # Choose your shapes here
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal()
results <- df %>%
group_by(wave) %>%
do({
model <- glm(binary_concern_strong ~  COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + COUNTY_RUCC_2013 + resp_sex + resp_educ + resp_yob + r_working + r_race + political_party, data = df, family = binomial)
broom::tidy(model)
}) %>%
filter(term %in% c("political_partyRepublican")) %>%
mutate(
odds_ratio = exp(estimate),
term = recode(term,
political_partyRepublican = "Republican")
)
# Plot for each wave
ggplot(results, aes(x = term, y = odds_ratio, group = wave, shape = as.factor(wave))) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), position = position_dodge(width = 0.5), width = 0.2) +
scale_shape_manual(values = c(16, 17, 18)) +  # Choose your shapes here
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks(),
limits = c(NA, 1)) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Saying You Have Greatly Reduced Contact As a Result of COVID-19 by Wave",
subtitle = "Reference: Democrats") +
theme_minimal()
