average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- average_by_party_table[-1, ]
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety Precautions Taken During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent","Republican"),
align = c("l", "r", "l"))
rm(average_by_party)
rm(average_by_party)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- average_by_party_table[-1, ]
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent","Republican"),
align = c("l", "r", "l"))
rm(average_by_party)
?round
average_by_party_table <- round(average_by_party_table, digits = 2)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- round(average_by_party_table[,1:3], digits = 2)
library(tidyverse)
library(dplyr)
library(kableExtra)
library(knitr)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- round(average_by_party_table[,1:3], digits = 2)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
View(average_by_party)
View(average_by_party_table)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
View(average_by_party_table)
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- as.data.frame(average_by_party_table)
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable_output <- kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent", "Republican"),
align = c("l", "r", "l"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("First Row" = 1, "Other Rows" = 2, nrow(average_by_party_table)))
print(kable_styled)
rm(average_by_party)
kable_styled
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("Where Respondents Reported Raw Counts" = 1, "Where Closest to 1 is highest" = 2, nrow(average_by_party_table)))
print(kable_styled)
kable_output
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- as.data.frame(average_by_party_table)
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable_output <- kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent", "Republican"),
align = c("l", "r", "l"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
index = c("Where Respondents Reported Raw Counts" = 1, "Where Closest to 1 is highest" = 6)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- as.data.frame(average_by_party_table)
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable_output <- kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent", "Republican"),
align = c("l", "r", "l"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("Where Respondents Reported Raw Counts" = 1, "Where Closest to 1 is highest" = 2, 6))
print(kable_styled)
rm(average_by_party)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- as.data.frame(average_by_party_table)
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable_output <- kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent", "Republican"),
align = c("l", "r", "l"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("Where Respondents Reported Raw Counts" = 1, "Where Closest to 1 is highest" = 2))
print(kable_styled)
rm(average_by_party)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- as.data.frame(average_by_party_table)
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 2)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable_output <- kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent", "Republican"),
align = c("l", "r", "l"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("Where Respondents Reported Raw Counts" = 1, "Where Closest to 1 is highest" = 5))
print(kable_styled)
rm(average_by_party)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- as.data.frame(average_by_party_table)
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 3)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable_output <- kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent", "Republican"),
align = c("l", "r", "l"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("Where Respondents Reported Raw Counts" = 1, "Where Closest to 1 is highest" = 5))
print(kable_styled)
rm(average_by_party)
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- as.data.frame(average_by_party_table)
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 3)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable_output <- kable(average_by_party_table,
caption = "Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent", "Republican"),
align = c("l", "c", "l"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("Where Respondents Reported Raw Counts" = 1, "Where Closest to 1 is highest" = 5))
print(kable_styled)
rm(average_by_party)
kable_styled
average_by_party <- df %>%
group_by(political_party) %>%
summarise(
average_num_cc_nonhh = mean(num_cc_nonhh, na.rm = TRUE),
average_contact_reduction = mean(contact_reduction, na.rm = TRUE),
average_concern = mean(binary_concern_strong, na.rm = TRUE),
average_mask_usage = mean(Norm_Masks_Used, na.rm = TRUE),
average_safety_index = mean(Non_Weighted_Safety_Index, na.rm = TRUE),
average_vaccinated = mean(Vaccinated, na.rm = TRUE)
)
average_by_party_table <- t(as.data.frame(average_by_party))
average_by_party_table <- as.data.frame(average_by_party_table)
average_by_party_table <- average_by_party_table[-1, ]
for (col in 1:3) {
average_by_party_table[, col] <- as.numeric(as.character(average_by_party_table[, col]))
}
average_by_party_table[, 1:3] <- round(average_by_party_table[, 1:3], digits = 3)
apt_row_names <- c("Non-Household Contacts", "Level of Stated Contact Reduction", "Concern About the Spread of the Virus", "Proportion of Contacts with a Mask", "Overall Safety During Contacts", "Proportion Vaccinated")
rownames(average_by_party_table) <- apt_row_names
kable_output <- kable(average_by_party_table,
caption = "Table 1. Descriptive Outcomes by Political Party",
col.names = c("Democrat", "Independent", "Republican"),
align = c("l", "c", "l"))
# Add a horizontal line after the first row
kable_styled <- kable_output %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Political Parties" = 3)) %>%  # Optional: Add a header above the column names
pack_rows(index = c("Where Respondents Reported Raw Counts" = 1, "Where Closest to 1 is highest" = 5))
print(kable_styled)
rm(average_by_party)
kable_styled
df <- fread("/Users/chrissoria/Documents/Research/BICS_Political_Polarization/data/BICS_ZIP_Features.csv")
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread("/Users/chrissoria/Documents/Research/BICS_Political_Polarization/data/BICS_ZIP_Features.csv")
names(df) <- make.unique(names(df))
RD_df <- df[df$political_party %in% c("Republican", "Democrat"), ]
View(df)
df <- fread("/Users/chrissoria/Documents/Research/BICS_Political_Polarization/data/BICS_ZIP_Features.csv")
RD_df <- df[df$political_party %in% c("Republican", "Democrat"), ]
D_df <- df[df$political_party == "Democrat"]
R_df <- df[df$political_party == "Republican"]
<- lm(Non_Weighted_Safety_Index ~ republican_percentage_won, data = D_df)
lm(Non_Weighted_Safety_Index ~ republican_percentage_won, data = D_df)
D_model <- lm(Non_Weighted_Safety_Index ~ republican_percentage_won, data = D_df)
plot(D_df$republican_percentage_won, D_df$Non_Weighted_Safety_Index,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(model, col = "blue")
D_model <- lm(Non_Weighted_Safety_Index ~ republican_percentage_won, data = D_df)
plot(D_df$republican_percentage_won, D_df$Non_Weighted_Safety_Index,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model, col = "blue")
D_model <- lm(Norm_Masks_Used ~ republican_percentage_won, data = D_df)
plot(D_df$republican_percentage_won, D_df$Non_Weighted_Safety_Index,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model, col = "blue")
D_model <- lm(republican_percentage_won ~ Norm_Masks_Used, data = D_df)
plot(D_df$republican_percentage_won, D_df$Non_Weighted_Safety_Index,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model, col = "blue")
D_model <- lm(republican_percentage_won ~ Norm_Masks_Used, data = D_df)
plot(D_df$Norm_Masks_Used, D_df$republican_percentage_won,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model, col = "blue")
D_model <- lm(republican_percentage_won ~ Norm_Masks_Used, data = D_df)
plot(D_df$Norm_Masks_Used, D_df$republican_percentage_won,
xlab = "Masks Used", ylab = "Republican Percentage Won",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model, col = "blue")
D_model <- lm(republican_percentage_won ~ num_cc_nonhh, data = D_df)
plot(D_df$republican_percentage_won, D_df$num_cc_nonhh,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model, col = "blue")
D_model <- lm(republican_percentage_won ~ num_cc_nonhh, data = D_df)
plot(D_df$republican_percentage_won, D_df$num_cc_nonhh,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model, col = "blue")
print(summary(D_model))
rn(D_model)
rm(D_model)
D_model_contacts <- lm(republican_percentage_won ~ num_cc_nonhh, data = D_df)
plot(D_df$republican_percentage_won, D_df$num_cc_nonhh,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model_contacts, col = "blue")
print(summary(D_model_contacts))
R_model_contacts <- lm(democrat_percentage_won ~ num_cc_nonhh, data = R_df)
plot(R_df$democrat_percentage_won, R_df$num_cc_nonhh,
xlab = "Democrat Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(R_model_contacts, col = "blue")
print(summary(R_model_contacts))
D_model_contacts <- lm(republican_percentage_won ~ num_cc_nonhh, data = D_df)
plot(D_df$republican_percentage_won, D_df$num_cc_nonhh,
xlab = "Republican Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(D_model_contacts, col = "blue")
R_model_contacts <- lm(democrat_percentage_won ~ num_cc_nonhh, data = R_df)
plot(R_df$democrat_percentage_won, R_df$num_cc_nonhh,
xlab = "Democrat Percentage Won", ylab = "Non Weighted Safety Index",
main = "Linear Regression of Non Weighted Safety Index on Republican Percentage Won")
abline(R_model_contacts, col = "blue")
print(summary(R_model_contacts))
print(summary(D_model_contacts))
D_model_masekd_contacts <- aov(republican_percentage_won ~ Non_Weighted_Safety_Index, data = D_df)
summary(D_model_masekd_contacts)
table(D_df$Non_Weighted_Safety_Index)
D_model_masekd_contacts <- aov(republican_percentage_won ~ Non_Weighted_Safety_Index, data = D_df)
summary(D_model_masekd_contacts)
par(mfrow = c(2, 2))
plot(D_model_masekd_contacts)
# Box Plot
boxplot(republican_percentage_won ~ Non_Weighted_Safety_Index, data = D_df, main = "ANOVA Box Plot",
xlab = "Group", ylab = "Dependent Variable")
boxplot(republican_percentage_won ~ Non_Weighted_Safety_Index, data = D_df, main = "ANOVA Box Plot",
xlab = "Group", ylab = "Dependent Variable")
D_model_masekd_contacts <- aov(republican_percentage_won ~ Norm_mask_used, data = D_df)
D_model_masekd_contacts <- aov(republican_percentage_won ~ Norm_Masks_Used, data = D_df)
summary(D_model_masekd_contacts)
par(mfrow = c(2, 2))
plot(D_model_masekd_contacts)
# Box Plot
boxplot(republican_percentage_won ~ Norm_mask_used, data = D_df, main = "ANOVA Box Plot",
xlab = "Group", ylab = "Dependent Variable")
D_model_masekd_contacts <- aov(republican_percentage_won ~ Norm_mask_used, data = D_df)
D_model_masekd_contacts <- aov(republican_percentage_won ~ Norm_Masks_Used, data = D_df)
summary(D_model_masekd_contacts)
par(mfrow = c(2, 2))
plot(D_model_masekd_contacts)
# Box Plot
boxplot(republican_percentage_won ~ Norm_Masks_Used, data = D_df, main = "ANOVA Box Plot",
xlab = "Group", ylab = "Dependent Variable")
boxplot(republican_percentage_won ~ Norm_Masks_Used, data = D_df, main = "ANOVA Box Plot",
xlab = "Group", ylab = "Dependent Variable")
# Fit the Model
model <- glm(contact_reduction ~ republican_percentage_won, family = "binomial", data = D_df)
# Create Prediction Data
prediction_data <- data.frame(republican_percentage_won = seq(min(D_df$republican_percentage_won, na.rm = TRUE),
max(D_df$republican_percentage_won, na.rm = TRUE),
length.out = 100))
# Get Predictions
prediction_data$predicted_prob <- predict(model, newdata = prediction_data, type = "response")
# Plot the Curve
library(ggplot2)
ggplot(prediction_data, aes(x = republican_percentage_won, y = predicted_prob)) +
geom_line() +
labs(x = "Republican Percentage Won", y = "Predicted Probability of Contact Reduction") +
ggtitle("Logistic Regression Curve")
ggplot(prediction_data, aes(x = republican_percentage_won, y = predicted_prob)) +
geom_line() +
labs(x = "Republican Percentage Won", y = "Predicted Probability of Contact Reduction") +
ggtitle("Logistic Regression Curve")
summary(model)
exp(0.0089)
exp(10*0.0089)
exp(-0.0089125)
exp(10*-0.0089125)
# Fit the Model
model <- glm(contact_reduction ~ democrat_percentage_won, family = "binomial", data = R_df)
# Create Prediction Data
prediction_data <- data.frame(democrat_percentage_won = seq(min(D_df$democrat_percentage_won, na.rm = TRUE),
max(D_df$democrat_percentage_won, na.rm = TRUE),
length.out = 100))
# Get Predictions
prediction_data$predicted_prob <- predict(model, newdata = prediction_data, type = "response")
# Plot the Curve
library(ggplot2)
ggplot(prediction_data, aes(x = democrat_percentage_won, y = predicted_prob)) +
geom_line() +
labs(x = "Republican Percentage Won", y = "Predicted Probability of Contact Reduction") +
ggtitle("Logistic Regression Curve")
ggplot(prediction_data, aes(x = democrat_percentage_won, y = predicted_prob)) +
geom_line() +
labs(x = "Republican Percentage Won", y = "Predicted Probability of Contact Reduction") +
ggtitle("Logistic Regression Curve")
summary(model)
