mutate(term = ifelse(term == "political_party_to_CDRepublican in Democratic led CD", "Republican in Democratic CD", term)) %>%
mutate(term = ifelse(term == "political_party_to_CDRepublican in Republican led CD", "Republican in Republican CD", term))
# Plot
ggplot(selected_coeff, aes(x = reorder(term, odds_ratio), y = odds_ratio, color = term)) +
geom_point(size = 4) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.2) +
coord_flip() +
labs(y = "Odds Ratio", x = "", title = "Odds Ratios of Reporting Reduction in Contact as a Result of the Pandemic",
subtitle = "Reference Category: Democrats in Democratic led CD") +
scale_y_continuous(breaks = scales::pretty_breaks()) +
theme_minimal() +
theme(legend.position = "none")  # This line removes the legend
combined_plot
# Load required libraries
library(broom)
library(dplyr)
library(ggplot2)
# Your model
model <- glm(contact_reduction ~ political_party_to_CD + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob + POPESTIMATE2020,
data = df, family = binomial)
# Get tidy data frame of coefficients
tidy_model <- broom::tidy(model)
# Filter the coefficients you are interested in and calculate odds ratios
selected_coeff <- tidy_model %>%
filter(term %in% c("political_party_to_CDDemocrat in Republican led CD",
"political_party_to_CDRepublican in Democratic led CD",
"political_party_to_CDRepublican in Republican led CD")) %>%
mutate(odds_ratio = exp(estimate)) %>%
mutate(term = ifelse(term == "political_party_to_CDDemocrat in Republican led CD", "Democrat in Republican CD", term)) %>%
mutate(term = ifelse(term == "political_party_to_CDRepublican in Democratic led CD", "Republican in Democratic CD", term)) %>%
mutate(term = ifelse(term == "political_party_to_CDRepublican in Republican led CD", "Republican in Republican CD", term))
# Plot
ggplot(selected_coeff, aes(x = reorder(term, odds_ratio), y = odds_ratio, color = term)) +
geom_point(size = 4) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.2) +
coord_flip() +
labs(y = "Odds Ratio", x = "", title = "Odds Ratios of Reporting Reduction in Contact as a Result of the Pandemic",
subtitle = "Reference Category: Democrats in Democratic led CD") +
scale_y_continuous(breaks = scales::pretty_breaks()) +
theme_minimal() +
theme(legend.position = "none")  # This line removes the legend
combined_plot
exp(-1.420596)
library(ggplot2)
# Adjust the data frame according to your actual data
coeffs_of_interest <- data.frame(
term = c("Independent", "Republican"),
odds_ratio = c(1.07, 1.24)  # Placeholder values, replace with actual data
)
# Creating a plot with different bar colors
ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio, fill = term)) +
geom_bar(stat = "identity", width = 0.3) +
geom_text(aes(label = sprintf("%.2f", odds_ratio)), vjust = -0.5, size = 4) +
scale_fill_manual(values = c("skyblue", "orange")) +  # Specifying colors for each bar here
scale_y_continuous(breaks = seq(0, max(coeffs_of_interest$odds_ratio) - 1, by = 0.5)) +
scale_x_discrete(labels = c("Independent", "Republican")) +
labs(
title = "Odds Ratios of Political Party Affiliation on Concern about the Pandemic",
subtitle = "Reference Category: Democrats",
x = "Political Party",
y = "Odds Ratio",
fill = ""  # This removes the legend title
) +
theme_minimal()
# Adjust the data frame according to your actual data
coeffs_of_interest <- data.frame(
term = c("Independent", "Republican"),
odds_ratio = c(1.07, 1.24)  # Placeholder values, replace with actual data
)
# Creating a plot with different bar colors
ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio, fill = term)) +
geom_bar(stat = "identity", width = 0.3) +
geom_text(aes(label = sprintf("%.2f", odds_ratio)), vjust = -0.5, size = 4) +
scale_fill_manual(values = c("skyblue", "orange")) +  # Specifying colors for each bar here
scale_y_continuous(breaks = seq(0, max(coeffs_of_interest$odds_ratio) - 1, by = 0.5)) +
scale_x_discrete(labels = c("Independent", "Republican")) +
labs(
title = "Odds Ratios of Political Party Affiliation on Concern about the Pandemic",
subtitle = "Reference Category: Democrats",
x = "Political Party",
y = "Odds Ratio",
fill = ""  # This removes the legend title
) +
theme_minimal()
library(ggplot2)
# Adjust the data frame according to your actual data
coeffs_of_interest <- data.frame(
term = c("Independent", "Republican"),
odds_ratio = c(1.07, 1.24)  # Placeholder values, replace with actual data
)
# Creating a plot with different bar colors
ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio, fill = term)) +
geom_bar(stat = "identity", width = 0.3) +
geom_text(aes(label = sprintf("%.2f", odds_ratio)), vjust = -0.5, size = 4) +
scale_fill_manual(values = c("skyblue", "orange")) +  # Specifying colors for each bar here
scale_y_continuous(breaks = seq(0, max(coeffs_of_interest$odds_ratio), by = 0.5)) +
scale_x_discrete(labels = c("Independent", "Republican")) +
labs(
title = "Odds Ratios of Political Party Affiliation on Concern about the Pandemic",
subtitle = "Reference Category: Democrats",
x = "Political Party",
y = "Odds Ratio",
fill = ""  # This removes the legend title
) +
theme_minimal()
# Adjust the data frame according to your actual data
coeffs_of_interest <- data.frame(
term = c("Independent", "Republican"),
odds_ratio = c(1.07, 1.24)  # Placeholder values, replace with actual data
)
# Creating a plot with different bar colors
ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio, fill = term)) +
geom_bar(stat = "identity", width = 0.3) +
geom_text(aes(label = sprintf("%.2f", odds_ratio)), vjust = -0.5, size = 4) +
scale_fill_manual(values = c("skyblue", "orange")) +  # Specifying colors for each bar here
scale_y_continuous(breaks = seq(0, max(coeffs_of_interest$odds_ratio), by = 0.5)) +
scale_x_discrete(labels = c("Independent", "Republican")) +
labs(
title = "Odds Ratios of Political Party Affiliation on Concern about the Pandemic",
subtitle = "Reference Category: Democrats",
x = "Political Party",
y = "Odds Ratio",
fill = ""  # This removes the legend title
) +
theme_minimal()
library(ggplot2)
# Adjust the data frame according to your actual data
coeffs_of_interest <- data.frame(
term = c("Independent", "Republican"),
odds_ratio = c(0.36, .25)  # Placeholder values, replace with actual data
)
# Creating a plot with different bar colors
ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio, fill = term)) +
geom_bar(stat = "identity", width = 0.3) +
geom_text(aes(label = sprintf("%.2f", odds_ratio)), vjust = -0.5, size = 4) +
scale_fill_manual(values = c("skyblue", "orange")) +  # Specifying colors for each bar here
scale_y_continuous(breaks = seq(0, max(coeffs_of_interest$odds_ratio), by = 0.5)) +
scale_x_discrete(labels = c("Independent", "Republican")) +
labs(
title = "Odds Ratios of Political Party Affiliation on Concern about the Pandemic",
subtitle = "Reference Category: Democrats",
x = "Political Party",
y = "Odds Ratio",
fill = ""  # This removes the legend title
) +
theme_minimal()
# Creating a plot with different bar colors
ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio, fill = term)) +
geom_bar(stat = "identity", width = 0.3) +
geom_text(aes(label = sprintf("%.2f", odds_ratio)), vjust = -0.5, size = 4) +
scale_fill_manual(values = c("skyblue", "orange")) +  # Specifying colors for each bar here
scale_y_continuous(breaks = seq(0, max(coeffs_of_interest$odds_ratio), by = 0.5)) +
scale_x_discrete(labels = c("Independent", "Republican")) +
labs(
title = "Odds Ratios of Political Party Affiliation on Concern about the Pandemic",
subtitle = "Reference Category: Democrats",
x = "Political Party",
y = "Odds Ratio",
fill = ""  # This removes the legend title
) +
theme_minimal()
# Select coefficients of interest
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican"))
# Exponentiate the coefficients to interpret them as odds ratios
coeffs_of_interest <- coeffs_of_interest %>%
mutate(odds_ratio = exp(estimate))
tidy_model <- broom::tidy(model)
# Select coefficients of interest and calculate odds ratios
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican"))
# Plot
ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio)) +
geom_bar(stat = "identity", fill = c("blue", "red"), width = 0.7) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.3) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks()) +
labs(y = "Odds Ratio", x = "Political Party",
title = "Odds Ratios by Political Party",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Select coefficients of interest
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican"))
# Exponentiate the coefficients to interpret them as odds ratios
coeffs_of_interest <- coeffs_of_interest %>%
mutate(odds_ratio = exp(estimate))
tidy_model <- broom::tidy(model)
# Select coefficients of interest and calculate odds ratios
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican"))
# Plot
plot <- ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio)) +
geom_bar(stat = "identity", fill = c("blue", "red"), width = 0.7) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.3) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks()) +
labs(y = "Odds Ratio", x = "Political Party",
title = "Odds Ratios by Political Party",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot
# Select coefficients of interest
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican"))
# Exponentiate the coefficients to interpret them as odds ratios
coeffs_of_interest <- coeffs_of_interest %>%
mutate(odds_ratio = exp(estimate))
tidy_model <- broom::tidy(model)
# Select coefficients of interest and calculate odds ratios
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican"))
# Plot
plot1 <- ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio)) +
geom_bar(stat = "identity", fill = c("blue", "red"), width = 0.7) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.3) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks()) +
labs(y = "Odds Ratio", x = "Political Party",
title = "Odds Ratios by Political Party",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot1
tidy_model <- broom::tidy(model)
# Select coefficients of interest and calculate odds ratios
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican"))
# Plot
plot1 <- ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio)) +
geom_bar(stat = "identity", fill = c("blue", "red"), width = 0.7) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.3) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks()) +
labs(y = "Odds Ratio", x = "Political Party",
title = "Odds Ratios by Political Party",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot1
model <- glm(binary_concern ~ political_party + CONGRESSPERSON_PARTY + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = df, family = binomial)
# View the model summary
summary(model)
tidy_model <- broom::tidy(model)
# Select coefficients of interest and calculate odds ratios
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican"))
# Plot
plot1 <- ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio)) +
geom_bar(stat = "identity", fill = c("blue", "red"), width = 0.7) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.3) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks()) +
labs(y = "Odds Ratio", x = "Political Party",
title = "Odds Ratios by Political Party",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot1
tidy_model <- broom::tidy(model)
# Select coefficients of interest and calculate odds ratios
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican"))
# Plot
plot1 <- ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio)) +
geom_bar(stat = "identity", fill = c("magenta", "orange"), width = 0.7) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.3) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks()) +
labs(y = "Odds Ratio", x = "Political Party",
title = "Odds Ratios by Political Party",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot1
tidy_model <- broom::tidy(model)
# Select coefficients of interest and calculate odds ratios
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican"))
# Plot
plot1 <- ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio)) +
geom_bar(stat = "identity", fill = c("magenta", "orange"), width = 0.7) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.3) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks()) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative odss of Being Concerned About the Spread of the Virus",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot1
tidy_model <- broom::tidy(model)
# Select coefficients of interest and calculate odds ratios
coeffs_of_interest <- tidy_model %>%
filter(term %in% c("political_partyIndependent", "political_partyRepublican")) %>%
mutate(odds_ratio = exp(estimate),
term = recode(term,
political_partyIndependent = "Independent",
political_partyRepublican = "Republican"))
# Plot
plot1 <- ggplot(coeffs_of_interest, aes(x = term, y = odds_ratio)) +
geom_bar(stat = "identity", fill = c("magenta", "orange"), width = 0.7) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.3) +
scale_y_continuous(labels = scales::comma,
breaks = scales::pretty_breaks()) +
labs(y = "Odds Ratio", x = "Political Affiliation of Person",
title = "Relative Odds of Concern About the Virus Spread by Political Affiliation",
subtitle = "Reference: Democrats") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot1
plot1
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
df$binary_concern_strong <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned", "Very concerned"), 1, 0))
df$binary_concern_strong <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned"), 1, 0))
df$contact_reduction <- ifelse(is.na(df$covid19_f2fchange), NA,
ifelse(df$covid19_f2fchange %in% c("I have greatly reduced face-to-face interaction with others"), 1, 0))
table(df$binary_concern)
model <- glm(binary_concern ~  COV_County_CMR_2020_06_20 + political_party, data = df, family = binomial)
df$binary_concern_strong <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned", "Very concerned"), 1, 0))
df$binary_concern_strong <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned"), 1, 0))
df$contact_reduction <- ifelse(is.na(df$covid19_f2fchange), NA,
ifelse(df$covid19_f2fchange %in% c("I have greatly reduced face-to-face interaction with others"), 1, 0))
table(df$binary_concern)
model <- glm(binary_concern ~  COV_County_CMR_2020_06_20 + political_party, data = df, family = binomial)
model <- glm(binary_concern ~  COV_County_CMR_2020_06_20 + political_party, data = df, family = binomial)
table(df$df$covid19_concern)
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
df$binary_concern_strong <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned", "Very concerned"), 1, 0))
df$binary_concern_strong <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned"), 1, 0))
df$contact_reduction <- ifelse(is.na(df$covid19_f2fchange), NA,
ifelse(df$covid19_f2fchange %in% c("I have greatly reduced face-to-face interaction with others"), 1, 0))
table(df$df$covid19_concern)
table(df$covid19_concern)
table(df$contact_reduction)
table(df$covid19_f2fchange)
model <- glm(binary_concern_strong ~  COV_County_CMR_2020_06_20 + political_party, data = df, family = binomial)
# View the model summary
summary(model)
model <- glm(binary_concern ~  COV_County_CMR_2020_06_20 + political_party, data = df, family = binomial)
df$binary_concern <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned", "Very concerned"), 1, 0))
df$binary_concern_strong <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned"), 1, 0))
df$contact_reduction <- ifelse(is.na(df$covid19_f2fchange), NA,
ifelse(df$covid19_f2fchange %in% c("I have greatly reduced face-to-face interaction with others"), 1, 0))
table(df$covid19_f2fchange)
model <- glm(binary_concern ~  COV_County_CMR_2020_06_20 + political_party, data = df, family = binomial)
# View the model summary
summary(model)
df$binary_concern <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Somewhat concerned", "Very concerned"), 1, 0))
df$binary_concern_strong <- ifelse(is.na(df$covid19_concern), NA,
ifelse(df$covid19_concern %in% c("Very concerned"), 1, 0))
df$contact_reduction <- ifelse(is.na(df$covid19_f2fchange), NA,
ifelse(df$covid19_f2fchange %in% c("I have greatly reduced face-to-face interaction with others"), 1, 0))
table(df$covid19_f2fchange)
model <- glm(binary_concern_strong ~  COV_County_CMR_2020_06_20 + political_party, data = df, family = binomial)
# View the model summary
summary(model)
model <- glm(binary_concern_strong ~ political_party + COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + resp_sex + resp_educ + resp_yob, data = df, family = binomial)
# View the model summary
summary(model)
model <- glm(binary_concern ~ political_party_to_CD + COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + resp_sex + resp_educ + resp_yob, data = df, family = binomial)
# View the model summary
summary(model)
model <- glm(binary_concern ~ political_party + CONGRESSPERSON_PARTY + COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + resp_sex + resp_educ + resp_yob, data = df, family = binomial)
# View the model summary
summary(model)
model <- glm(contact_reduction ~  COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + political_party, data = df, family = binomial)
# View the model summary
summary(model)
model <- glm(contact_reduction ~ political_party + COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + resp_sex + resp_educ + resp_yob, data = df, family = binomial)
# View the model summary
summary(model)
model <- glm(contact_reduction ~ political_party + CONGRESSPERSON_PARTY + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = df, family = binomial)
# View the model summary
summary(model)
library(broom)
tidy_model <- broom::tidy(model)
model <- glm(contact_reduction ~ political_party_to_CD + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = df, family = binomial)
# View the model summary
summary(model)
library(broom)
tidy_model <- broom::tidy(model)
# Load required libraries
library(broom)
library(dplyr)
library(ggplot2)
# Your model
model <- glm(contact_reduction ~ political_party_to_CD + COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + resp_sex + resp_educ + resp_yob + POPESTIMATE2020,
data = df, family = binomial)
# Get tidy data frame of coefficients
tidy_model <- broom::tidy(model)
# Filter the coefficients you are interested in and calculate odds ratios
selected_coeff <- tidy_model %>%
filter(term %in% c("political_party_to_CDDemocrat in Republican led CD",
"political_party_to_CDRepublican in Democratic led CD",
"political_party_to_CDRepublican in Republican led CD")) %>%
mutate(odds_ratio = exp(estimate)) %>%
mutate(term = ifelse(term == "political_party_to_CDDemocrat in Republican led CD", "Democrat in Republican CD", term)) %>%
mutate(term = ifelse(term == "political_party_to_CDRepublican in Democratic led CD", "Republican in Democratic CD", term)) %>%
mutate(term = ifelse(term == "political_party_to_CDRepublican in Republican led CD", "Republican in Republican CD", term))
# Plot
ggplot(selected_coeff, aes(x = reorder(term, odds_ratio), y = odds_ratio, color = term)) +
geom_point(size = 4) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96),
ymax = exp(estimate + std.error*1.96)), width = 0.2) +
coord_flip() +
labs(y = "Odds Ratio", x = "", title = "Odds Ratios of Reporting Reduction in Contact as a Result of the Pandemic",
subtitle = "Reference Category: Democrats in Democratic led CD") +
scale_y_continuous(breaks = scales::pretty_breaks()) +
theme_minimal() +
theme(legend.position = "none")  # This line removes the legend
library(broom)
library(dplyr)
library(ggplot2)
library(cowplot)  # for combining plots
# Function to create a plot for a given subset of data
create_plot <- function(data_subset) {
model <- glm(contact_reduction ~ political_party_to_CD + CONGRESSPERSON_PARTY +
COV_County_CMR_2020_06_20 + State_Government_Response_Index_11192020 + resp_sex + resp_educ + resp_yob,
data = data_subset, family = binomial)
tidy_model <- broom::tidy(model)
selected_coeff <- tidy_model %>%
filter(term %in% c("political_party_to_CDDemocrat in Republican led CD",
"political_party_to_CDRepublican in Democratic led CD",
"political_party_to_CDRepublican in Republican led CD")) %>%
mutate(odds_ratio = exp(estimate)) %>%
mutate(term = recode(term,
`political_party_to_CDDemocrat in Republican led CD` = "Democrat in Republican CD",
`political_party_to_CDRepublican in Democratic led CD` = "Republican in Democratic CD",
`political_party_to_CDRepublican in Republican led CD` = "Republican in Republican CD"))
ggplot(selected_coeff, aes(x = reorder(term, odds_ratio), y = odds_ratio, color = term)) +
geom_point(size = 4) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96), ymax = exp(estimate + std.error*1.96)), width = 0.2) +
coord_flip() +
labs(y = "Odds Ratio", x = "",
title = paste("Wave", unique(data_subset$wave), ": Odds Ratios of Reporting Reduction in Contact"),
subtitle = "Reference Category: Democrats in Democratic led CD") +
scale_y_continuous(breaks = scales::pretty_breaks()) +
theme_minimal() +
theme(legend.position = "none")
}
# Applying the function to each subset of data by wave and store plots in a list
plots <- df %>%
split(.$wave) %>%  # Split data by wave
map(~create_plot(.))  # Apply the function to each subset
# Combine the separate plots into one
combined_plot <- cowplot::plot_grid(plotlist = plots, align = 'h')
# Print the combined plot
print(combined_plot)
combined_plot
