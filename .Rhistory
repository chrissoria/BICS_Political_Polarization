"political_party_to_CDRepublican in Democratic led CD",
"political_party_to_CDRepublican in Republican led CD")) %>%
mutate(odds_ratio = exp(estimate)) %>%
mutate(term = recode(term,
`political_party_to_CDDemocrat in Republican led CD` = "Democrat in Republican CD",
`political_party_to_CDRepublican in Democratic led CD` = "Republican in Democratic CD",
`political_party_to_CDRepublican in Republican led CD` = "Republican in Republican CD"))
ggplot(selected_coeff, aes(x = reorder(term, odds_ratio), y = odds_ratio, color = term)) +
geom_point(size = 4) +
geom_errorbar(aes(ymin = exp(estimate - std.error*1.96), ymax = exp(estimate + std.error*1.96)), width = 0.2) +
coord_flip() +
labs(y = "Odds Ratio", x = "",
title = paste("Wave", unique(data_subset$wave), ": Odds Ratios of Reporting Reduction in Contact"),
subtitle = "Reference Category: Democrats in Democratic led CD") +
scale_y_continuous(breaks = scales::pretty_breaks()) +
theme_minimal() +
theme(legend.position = "none")
}
# Applying the function to each subset of data by wave and store plots in a list
plots <- df %>%
split(.$wave) %>%  # Split data by wave
map(~create_plot(.))  # Apply the function to each subset
# Combine the separate plots into one
combined_plot <- cowplot::plot_grid(plotlist = plots, align = 'h')
# Print the combined plot
print(combined_plot)
combined_plot
library(data.table)
library(dplyr)
library(tidyverse)
library(car)
df_all_waves <- readRDS("/Users/chrissoria/documents/research/BICs/bics-data/data/lucid-pipeline/df_all_waves.rds")
df_all_waves2 <- readRDS("/Users/chrissoria/documents/research/BICs/bics-data/data/lucid/df_all_waves.rds")
colnames(df_all_waves)
setdiff(names(df_all_waves), names(df_all_waves2))
table(df_all_waves$political_view, useNA = "always")
df_w1 <- readRDS("/Users/chrissoria/documents/research/BICs/bics-data/data/lucid-pipeline/national_wave1_unweighted.rds")
df_w3 <- readRDS("/Users/chrissoria/documents/research/BICs/bics-data/data/lucid-pipeline/national_wave3_unweighted.rds")
df_w6 <- readRDS("/Users/chrissoria/documents/research/BICs/bics-data/data/lucid-pipeline/national_wave6_unweighted.rds")
df_w2 <- readRDS("/Users/chrissoria/documents/research/BICs/bics-data/data/lucid-pipeline/national_wave2_unweighted.rds")
df_w4 <- readRDS("/Users/chrissoria/documents/research/BICs/bics-data/data/lucid-pipeline/national_wave4_unweighted.rds")
df_w5 <- readRDS("/Users/chrissoria/documents/research/BICs/bics-data/data/lucid-pipeline/national_wave5_unweighted.rds")
df_w1$wave <- 1
df_w2$wave <- 2
df_w3$wave <- 3
df_w4$wave <- 4
df_w5$wave <- 5
df_w6$wave <- 6
# Check and convert if column exists in df_w2
if ("resp_employ" %in% colnames(df_w1)) {
df_w1$resp_employ <- as.character(df_w1$resp_employ)
}
if ("resp_employ" %in% colnames(df_w2)) {
df_w2$resp_employ <- as.character(df_w2$resp_employ)
}
if ("resp_employ" %in% colnames(df_w3)) {
df_w3$resp_employ <- as.character(df_w3$resp_employ)
}
# Check and convert if column exists in df_w4
if ("resp_employ" %in% colnames(df_w4)) {
df_w4$resp_employ <- as.character(df_w4$resp_employ)
}
if ("resp_employ" %in% colnames(df_w5)) {
df_w5$resp_employ <- as.character(df_w5$resp_employ)
}
# Check and convert if column exists in df_w6
if ("resp_employ" %in% colnames(df_w6)) {
df_w6$resp_employ <- as.character(df_w6$resp_employ)
}
df_w2$resp_occupation <- as.character(df_w2$resp_occupation)
df_w3$resp_occupation <- as.character(df_w3$resp_occupation)
df_w4$resp_occupation <- as.character(df_w4$resp_occupation)
df_w5$resp_occupation <- as.character(df_w5$resp_occupation)
df_combined <- dplyr::bind_rows(df_w2, df_w4, df_w6)
write.csv(df_combined, file = "df_combined.csv", row.names = FALSE)
# Defining the mapping
political_view_mapping <- c('Extremely conservative' = 1,
'Slightly conservative' = 2,
'Moderate' = 3,
'Middle of the road' = 3,
'Slightly liberal' = 4,
'Liberal' = 5,
'Extremely liberal' = 6)
# Creating a new variable 'political_view_numeric' by mapping the 'political_view' column using the defined mapping
df_combined$political_view_numeric <- dplyr::recode(df_combined$political_view, !!!political_view_mapping)
df_combined %>%
group_by(wave) %>%
summarise(avg_political_view = mean(political_view_numeric, na.rm = TRUE))
df_combined$wave <- as.factor(df_combined$wave)
df_list <- split(df_combined, df_combined$wave)
plots <- lapply(df_list, function(df) {
df$political_view_numeric <- as.factor(df$political_view_numeric)
total <- nrow(df)
df_percent <- df %>%
group_by(political_view_numeric) %>%
summarise(count = n()) %>%
mutate(percentage = count / total * 100)
ggplot(df_percent, aes(x = political_view_numeric, y = percentage)) +
geom_bar(stat = "identity") +
ylab("Percentage") +
ggtitle(paste0("Wave ", unique(df$wave)))
})
# Plotting the plots
gridExtra::grid.arrange(grobs = plots)
# Check homogeneity of variances
leveneTest(political_view_numeric ~ wave, data = df_combined)
write.csv(df_combined, file = "df_combined.csv", row.names = FALSE)
df <- fread('data/BICS_ZIP_Features.csv')
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
model <- glm(num_cc_nonhh ~ political_party_to_CD + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = df, family = linear)
model <- model <- lm(num_cc_nonhh ~ political_party_to_CD + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = df)
# View the model summary
summary(model)
library(broom)
tidy_model <- broom::tidy(model)
model <- model <- lm(Weighted_Safety_Index ~ political_party_to_CD + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = df)
# View the model summary
summary(model)
library(broom)
tidy_model <- broom::tidy(model)
df$political_view
model <- model <- lm(num_cc_nonhh ~ political_party + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = df)
# View the model summary
summary(model)
library(broom)
tidy_model <- broom::tidy(model)
# Group data by 'wave' and run lm() for each group, then tidy the results
tidy_models <- df %>%
group_by(wave) %>%
do(tidy(lm(num_cc_nonhh ~ political_party + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = .)))
# Plot the coefficients using ggplot
ggplot(tidy_models, aes(x = wave, y = estimate, color = term)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), position = position_dodge(width = 0.5)) +
labs(title = "Model Coefficients by Wave", x = "Wave", y = "Estimate") +
theme_minimal() +
theme(legend.position = "bottom")
# Group data by 'wave' and run lm() for each group, then tidy the results
tidy_models <- df %>%
group_by(wave) %>%
do(tidy(lm(num_cc_nonhh ~ political_party + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = .)))
# Filter only rows where term is 'political_party'
tidy_models_filtered <- tidy_models %>% filter(term == "political_party")
# Plot the filtered data
ggplot(tidy_models_filtered, aes(x = wave, y = estimate, color = term)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), position = position_dodge(width = 0.5)) +
labs(title = "Model Coefficients for Political_Party by Wave", x = "Wave", y = "Estimate") +
theme_minimal() +
theme(legend.position = "bottom")
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = data))
# Generate summaries for each model
model_summaries <- lapply(model_list, summary)
# To view the summary for a specific wave (e.g., the first wave)
print(model_summaries[[1]])
# To view the summary for the second wave
print(model_summaries[[2]])
# ... and so on
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = data))
# Generate summaries for each model
model_summaries <- lapply(model_list, summary)
# To view the summary for a specific wave (e.g., the first wave)
print(model_summaries[[1]])
# To view the summary for the second wave
print(model_summaries[[2]])
# ... and so on
print(model_summaries[[3]])
table(df$wave, df$political_view)
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = data))
# Generate summaries for each model
model_summaries <- lapply(model_list, summary)
# To view the summary for a specific wave (e.g., the first wave)
print(model_summaries[[1]])
# To view the summary for the second wave
print(model_summaries[[2]])
# ... and so on
print(model_summaries[[3]])
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + resp_educ + resp_yob, data = data))
# Generate summaries for each model
model_summaries <- lapply(model_list, summary)
# To view the summary for a specific wave (e.g., the first wave)
print(model_summaries[[1]])
# To view the summary for the second wave
print(model_summaries[[2]])
# ... and so on
print(model_summaries[[3]])
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
pwd
getwd()
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
df$educ_group
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
df$educ_group
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob, data = data))
# Generate summaries for each model
model_summaries <- lapply(model_list, summary)
# To view the summary for a specific wave (e.g., the first wave)
print(model_summaries[[1]])
# To view the summary for the second wave
print(model_summaries[[2]])
# ... and so on
print(model_summaries[[3]])
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
df$r_race
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
df$r_race
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + resp_employ + resp_hispanic + resp_race, data = data))
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + resp_employ + resp_hispanic + r_race, data = data))
table(df$r_race)
table(df$resp_hispanic)
table(df$resp_employ)
library(data.table)
library(tidyverse)
library(dplyr)
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
df$r_working
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_workin + resp_hispanic + r_race, data = data))
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
# Generate summaries for each model
model_summaries <- lapply(model_list, summary)
# To view the summary for a specific wave (e.g., the first wave)
print(model_summaries[[1]])
# To view the summary for the second wave
print(model_summaries[[2]])
# ... and so on
print(model_summaries[[3]])
df <- fread('data/BICS_ZIP_Features.csv')
head(df)
# Load required libraries
library(dplyr)
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
# Generate summaries for each model
model_summaries <- lapply(model_list, summary)
# To view the summary for a specific wave (e.g., the first wave)
print(model_summaries[[1]])
# To view the summary for the second wave
print(model_summaries[[2]])
# ... and so on
print(model_summaries[[3]])
# Load required libraries
df_combined$political_view <- relevel(df_combined$political_view, ref = "Middle / Moderate")
# Load required libraries
df$political_view <- relevel(df_combined$political_view, ref = "Middle / Moderate")
# Load required libraries
df$political_view <- relevel(df$political_view, ref = "Middle / Moderate")
# Load required libraries
df$political_view <- as.factor(df$political_view)
df$political_view <- relevel(df$political_view, ref = "Middle / Moderate")
# Group data by 'wave' and run lm() for each group, store it in a list
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(num_cc_nonhh ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
# Generate summaries for each model
model_summaries <- lapply(model_list, summary)
# To view the summary for a specific wave (e.g., the first wave)
print(model_summaries[[1]])
# To view the summary for the second wave
print(model_summaries[[2]])
# ... and so on
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Norm_Masks_Used ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Non_Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
table(df$Norm_Masks_Used)
table(df$Weighted_Safety_Index)
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Non_Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Non_Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party_to_CD + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party_to_CD + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party_to_CD + CONGRESSPERSON + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Weighted_Safety_Index ~ political_party_to_CD + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Norm_Masks_Used ~ political_party_to_CD + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Norm_Masks_Used ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
model_list <- df %>%
group_by(wave) %>%
group_split() %>%
lapply(function(data) lm(Non_Weighted_Safety_Index ~ political_party + political_view + State_Government_Response_Index_11192020 + COV_County_CMR_2020_06_20 + resp_sex + educ_group + resp_yob + r_working + resp_hispanic + r_race, data = data))
model_summaries <- lapply(model_list, summary)
# wave 2
print(model_summaries[[1]])
# wave 4
print(model_summaries[[2]])
# wave 6
print(model_summaries[[3]])
